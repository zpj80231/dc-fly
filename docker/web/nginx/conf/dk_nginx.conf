
user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log notice;
pid        /var/run/nginx.pid;


events {
    use epoll;
    worker_connections  102400;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  600;
    client_max_body_size 500m;
    client_body_buffer_size 50M;

    #开启gzip
    gzip  on;
    #低于1kb的资源不压缩
    gzip_min_length 1k;
    #压缩级别1-9，越大压缩率越高，同时消耗cpu资源也越多。
    gzip_comp_level 3;
    #需要压缩哪些响应类型的资源，多个空格隔开。不建议压缩图片.
    gzip_types text/plain application/javascript application/x-javascript text/javascript text/xml text/css;
    #配置禁用gzip条件，支持正则。此处表示ie6及以下不启用gzip（因为ie低版本不支持）
    gzip_disable "MSIE [1-6]\.";
    #是否添加“Vary: Accept-Encoding”响应头
    gzip_vary on;
	
	upstream gateway {
	  server 172.25.0.1:8001 max_fails=1 fail_timeout=30s;
	  server 172.25.0.1:8000 max_fails=1 fail_timeout=30s;	
	}

	upstream gateway2 {
	  server 172.25.0.1:8002;	
	}

	server {
		listen       80;
		listen       443 ssl;
		server_name	 124.70.95.70,cc2webtest.diankongcloud.cn;
        ssl_certificate /etc/nginx/html/ssl/diankongcloud.cn.pem;
        ssl_certificate_key /etc/nginx/html/ssl/diankongcloud.cn.key;
        ssl_session_cache    shared:SSL:1m;
        ssl_session_timeout  5m;
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        ssl_prefer_server_ciphers on;
        #禁止在header中出现服务器版本，防止黑客利用版本漏洞攻击
        server_tokens off;
        #如果是全站 HTTPS 并且不考虑 HTTP 的话，可以加入 HSTS 告诉你的浏览器本网站全站加密，并且强制用 HTTPS 访问
        fastcgi_param   HTTPS               on;
        fastcgi_param   HTTP_SCHEME         https;

		location / {
			root   /etc/nginx/html/dist/;
			index  index.html index.htm;
			try_files $uri $uri/ /index.html;
		}

        location /sdk {
               root   /etc/nginx/;
               autoindex on;
        }

                 
        location /toolbar {
			alias /etc/nginx/html/toolbar/dist/;
            index  index.html index.htm;

		}
		
		location /admin {
			proxy_set_header X-Real-IP $remote_addr;
			proxy_pass http://172.25.0.1:8000/dky-admin/admin;
			proxy_send_timeout 1200;
			proxy_read_timeout 1200;
			proxy_connect_timeout 1200;
			add_header 'Access-Control-Allow-Headers' 'DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization';
			add_header 'Access-Control-Allow-Methods' 'GET, POST, DELETE, OPTIONS, PUT';
			add_header 'Access-Control-Allow-Credentials' 'true';
			add_header 'Access-Control-Allow-Origin' '*';
			if ( $request_method = 'OPTIONS' ) {
				return 204;
			}
		}

		location /gw/ {
			proxy_pass http://gateway;
			proxy_set_header X-Real-IP  $remote_addr;
			proxy_set_header Host $http_host;
			proxy_redirect off;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			add_header 'Access-Control-Allow-Headers' 'Content-Type';
			add_header 'Access-Control-Allow-Methods' 'GET, POST, DELETE, OPTIONS, PUT';
			add_header 'Access-Control-Allow-Credentials' 'true';
			add_header 'Access-Control-Allow-Origin' '*';
		}

		location /gw/ws/sdk {
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header Host      $http_host;
			proxy_set_header X-NginX-Proxy true;
			proxy_pass http://gateway;
			proxy_http_version 1.1;
			proxy_read_timeout 3600s;
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection "upgrade";
			proxy_redirect off;
	    }

	    location /gw2/ {
			proxy_pass http://gateway2;
			proxy_set_header X-Real-IP  $remote_addr;
			proxy_set_header Host $http_host;
			proxy_redirect off;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			add_header 'Access-Control-Allow-Headers' 'Content-Type';
			add_header 'Access-Control-Allow-Methods' 'GET, POST, DELETE, OPTIONS, PUT';
			add_header 'Access-Control-Allow-Credentials' 'true';
			add_header 'Access-Control-Allow-Origin' '*';
		}

		location /gw2/ws/sdk {
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header Host      $http_host;
			proxy_set_header X-NginX-Proxy true;
			proxy_pass http://gateway2;
			proxy_http_version 1.1;
			proxy_read_timeout 3600s;
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection "upgrade";
			proxy_redirect off;
	    }

		location /prometheus/ {
			proxy_pass http://192.168.1.18:9090/;
			proxy_set_header Host $http_host;
			proxy_redirect off;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			add_header 'Access-Control-Allow-Headers' 'Content-Type';
			add_header 'Access-Control-Allow-Methods' 'GET, POST, DELETE, OPTIONS, PUT';
			add_header 'Access-Control-Allow-Credentials' 'true';
			add_header 'Access-Control-Allow-Origin' '*';
		}

		location /grafana/ {
			proxy_pass http://192.168.1.18:3001/;
			proxy_set_header Authorization "Bearer $cookie_grafana_key";
			proxy_set_header X-Real-IP  $remote_addr;
			proxy_set_header Host $http_host;
			proxy_redirect off;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			add_header 'Access-Control-Allow-Headers' 'Content-Type';
			add_header 'Access-Control-Allow-Methods' 'GET, POST, DELETE, OPTIONS, PUT';
			add_header 'Access-Control-Allow-Credentials' 'true';
			add_header 'Access-Control-Allow-Origin' '*';
		}
	}

}

